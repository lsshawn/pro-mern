{"version":3,"sources":["../server/issue.js"],"names":["validateIssue","validIssueStatus","New","Open","Assigned","Fixed","Verified","Close","issueFieldType","status","owner","effort","created","completionDate","title","cleanupIssue","issue","cleanedUpIssue","Object","keys","forEach","field","errors","key","push","length","join","module","exports"],"mappings":";;;;;kBAAe;AACbA,iBAAeA;AADF,C;;AAIf;;AACA,MAAMC,mBAAmB;AACvBC,OAAK,IADkB;AAEvBC,QAAM,IAFiB;AAGvBC,YAAU,IAHa;AAIvBC,SAAO,IAJgB;AAKvBC,YAAU,IALa;AAMvBC,SAAO;AANgB,CAAzB;;AASA,MAAMC,iBAAiB;AACrBC,UAAQ,UADa;AAErBC,SAAO,UAFc;AAGrBC,UAAQ,UAHa;AAIrBC,WAAS,UAJY;AAKrBC,kBAAgB,UALK;AAMrBC,SAAO;AANc,CAAvB;;AASA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAMC,iBAAiB,EAAvB;AACAC,SAAOC,IAAP,CAAYH,KAAZ,EAAmBI,OAAnB,CAA2BC,SAAS;AAClC,QAAIb,eAAea,KAAf,CAAJ,EACEJ,eAAeI,KAAf,IAAwBL,MAAMK,KAAN,CAAxB;AACH,GAHD;AAIA,SAAOJ,cAAP;AACD;;AAED,SAASjB,aAAT,CAAuBgB,KAAvB,EAA8B;AAC5B,QAAMM,SAAS,EAAf;AACAJ,SAAOK,GAAP,CAAWf,cAAX,EAA2BY,OAA3B,CAAmCC,SAAS;AAC1C,QAAIb,eAAea,KAAf,MAA0B,UAA1B,IAAwC,CAACL,MAAMK,KAAN,CAA7C,EAA2D;AACzDC,aAAOE,IAAP,CAAa,4BAA2BH,KAAM,EAA9C;AACD;AACF,GAJD;;AAMA,MAAI,CAACpB,iBAAiBe,MAAMP,MAAvB,CAAL,EAAqC;AACnCa,WAAOE,IAAP,CAAa,GAAER,MAAMP,MAAO,yBAA5B;AACD;AACD,SAAQa,OAAOG,MAAP,GAAgBH,OAAOI,IAAP,CAAY,IAAZ,CAAhB,GAAoC,IAA5C;AACD;;AAEDC,OAAOC,OAAP,GAAiB;AACf5B,eADe;AAEfe;AAFe,CAAjB","file":"issue.js","sourcesContent":["export default { \n  validateIssue: validateIssue\n};\n\n// validation - error handling\nconst validIssueStatus = {\n  New: true,\n  Open: true,\n  Assigned: true,\n  Fixed: true,\n  Verified: true,\n  Close: true,\n};\n\nconst issueFieldType = { \n  status: 'required', \n  owner: 'required', \n  effort: 'optional', \n  created: 'required', \n  completionDate: 'optional', \n  title: 'required',\n};\n\nfunction cleanupIssue(issue) {\n  const cleanedUpIssue = {};\n  Object.keys(issue).forEach(field => {\n    if (issueFieldType[field])\n      cleanedUpIssue[field] = issue[field];\n  });\n  return cleanedUpIssue;\n}\n\nfunction validateIssue(issue) {\n  const errors = [];\n  Object.key(issueFieldType).forEach(field => {\n    if (issueFieldType[field] === 'required' && !issue[field]) {\n      errors.push(`Missing mandatory field: ${field}`);\n    }\n  });\n  \n  if (!validIssueStatus[issue.status]) {\n    errors.push(`${issue.status} is not a valid status.`);\n  }\n  return (errors.length ? errors.join('; ') : null);\n}\n\nmodule.exports = {\n  validateIssue,\n  cleanupIssue,\n};"]}