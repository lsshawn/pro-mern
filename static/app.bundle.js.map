{"version":3,"sources":["webpack:///./src/IssueAdd.jsx","webpack:///./src/IssueFilter.jsx","webpack:///./src/App.jsx","webpack:///./src/IssueList.jsx"],"names":["IssueAdd","handleSubmit","bind","e","preventDefault","form","document","forms","issueAdd","props","createIssue","owner","value","title","status","created","Date","Component","IssueFilter","contentNode","getElementById","render","IssueRow","issue","_id","toDateString","effort","completionDate","IssueTable","issueRows","issues","map","IssueList","state","loadData","fetch","then","response","ok","json","console","log","data","_metadata","total_count","records","forEach","setState","alert","error","message","catch","err","newIssue","method","headers","body","JSON","stringify","updatedIssue","newIssues","concat"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;;;;;;;IAEqBA,Q;;;AACnB,sBAAc;AAAA;;AAAA;;AAEZ,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,OAApB;AAFY;AAGb;;;;iCAEYC,C,EAAG;AACdA,QAAEC,cAAF,GADc,CACM;AACpB,UAAIC,OAAOC,SAASC,KAAT,CAAeC,QAA1B,CAFc,CAEsB;AACpC,WAAKC,KAAL,CAAWC,WAAX,CAAuB,EAAE;AACvBC,eAAON,KAAKM,KAAL,CAAWC,KADG;AAErBC,eAAOR,KAAKQ,KAAL,CAAWD,KAFG;AAGrBE,gBAAQ,KAHa;AAIrBC,iBAAS,IAAIC,IAAJ;AAJY,OAAvB;AAMA;AACAX,WAAKM,KAAL,CAAWC,KAAX,GAAmB,EAAnB;AACAP,WAAKQ,KAAL,CAAWD,KAAX,GAAmB,EAAnB;AACD;;;6BAEQ;AACP;AACE;AACA;AAAA;AAAA,YAAM,MAAK,UAAX,EAAsB,UAAU,KAAKX,YAArC;AACE,mDAAO,MAAK,MAAZ,EAAmB,MAAK,OAAxB,EAAgC,aAAY,OAA5C,GADF;AAEE,mDAAO,MAAK,MAAZ,EAAmB,MAAK,OAAxB,EAAgC,aAAY,OAA5C,GAFF;AAGE;AAAA;AAAA;AAAA;AAAA;AAHF;AAFF;AAQD;;;;EA7BmC,gBAAMgB,S;;kBAAvBjB,Q;;;;;;;;;;;;;;;;ACFrB;;;;;;;;;;;;IAEqBkB,W;;;;;;;;;;;6BACV;AACP,aACE;AAAA;AAAA;AAAA;AAAA,OADF;AAGD;;;;EALsC,gBAAMD,S;;kBAA1BC,W;;;;;;;;;;ACFrB;;;;AACA;;;;AACA;;;;;;AAEA,IAAMC,cAAcb,SAASc,cAAT,CAAwB,UAAxB,CAApB;;AAEA,mBAASC,MAAT,CAAgB,wDAAhB,EAA+BF,WAA/B,E,CAAkD,+C;;;;;;;;;;;;;;;;ACNlD;;;;AACA;;AACA;;;;AACA;;;;;;;;;;;;AAEA;AACA,IAAMG,WAAW,SAAXA,QAAW,CAACb,KAAD;AAAA,SACf;AAAA;AAAA;AACE;AAAA;AAAA;AAAKA,YAAMc,KAAN,CAAYC;AAAjB,KADF;AAEE;AAAA;AAAA;AAAKf,YAAMc,KAAN,CAAYT;AAAjB,KAFF;AAGE;AAAA;AAAA;AAAKL,YAAMc,KAAN,CAAYZ;AAAjB,KAHF;AAIE;AAAA;AAAA;AAAKF,YAAMc,KAAN,CAAYR,OAAZ,CAAoBU,YAApB;AAAL,KAJF;AAKE;AAAA;AAAA;AAAKhB,YAAMc,KAAN,CAAYG;AAAjB,KALF;AAME;AAAA;AAAA;AAAKjB,YAAMc,KAAN,CAAYI,cAAZ,GAA6BlB,MAAMc,KAAN,CAAYI,cAAZ,CAA2BF,YAA3B,EAA7B,GAAyE;AAA9E,KANF;AAOE;AAAA;AAAA;AAAKhB,YAAMc,KAAN,CAAYV;AAAjB;AAPF,GADe;AAAA,CAAjB;;AAYA;AACA,SAASe,UAAT,CAAoBnB,KAApB,EAA2B;AACzB,MAAMoB,YAAYpB,MAAMqB,MAAN,CAAaC,GAAb,CAAiB;AAAA,WAAS,8BAAC,QAAD,IAAU,KAAKR,MAAMC,GAArB,EAA0B,OAAOD,KAAjC,GAAT;AAAA,GAAjB,CAAlB;AACA,SACE;AAAA;AAAA,MAAO,WAAU,gBAAjB;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEE;AAAA;AAAA;AAAA;AAAA,SAFF;AAGE;AAAA;AAAA;AAAA;AAAA,SAHF;AAIE;AAAA;AAAA;AAAA;AAAA,SAJF;AAKE;AAAA;AAAA;AAAA;AAAA,SALF;AAME;AAAA;AAAA;AAAA;AAAA,SANF;AAOE;AAAA;AAAA;AAAA;AAAA;AAPF;AADF,KADF;AAYE;AAAA;AAAA;AAAQM;AAAR;AAZF,GADF;AAgBD;;IAEoBG,S;;;AACnB,uBAAc;AAAA;;AAAA;;AAEZ,UAAKC,KAAL,GAAa,EAAEH,QAAQ,EAAV,EAAb;AACA,UAAKpB,WAAL,GAAmB,MAAKA,WAAL,CAAiBR,IAAjB,OAAnB;AAHY;AAIb;;AAED;;;;;wCACoB;AAClB,WAAKgC,QAAL;AACD;;;+BAEU;AAAA;;AACTC,YAAM,aAAN,EAAqBC,IAArB,CAA0B,oBAAa;AACrC,YAAIC,SAASC,EAAb,EAAiB;AACfD,mBAASE,IAAT,GAAgBH,IAAhB,CAAqB,gBAAQ;AAC3BI,oBAAQC,GAAR,CAAY,0BAAZ,EAAwCC,KAAKC,SAAL,CAAeC,WAAvD;AACA;AACAF,iBAAKG,OAAL,CAAaC,OAAb,CAAqB,iBAAS;AAC5BvB,oBAAMR,OAAN,GAAgB,IAAIC,IAAJ,CAASO,MAAMR,OAAf,CAAhB;AACA,kBAAIQ,MAAMI,cAAV,EACEJ,MAAMI,cAAN,GAAuB,IAAIX,IAAJ,CAASO,MAAMI,cAAf,CAAvB;AACH,aAJD;AAKA,mBAAKoB,QAAL,CAAc,EAAEjB,QAAQY,KAAKG,OAAf,EAAd;AACD,WATD;AAUD,SAXD,MAWO;AACLR,mBAASE,IAAT,GAAgBH,IAAhB,CAAqB,iBAAS;AAC5BY,kBAAM,4BAA4BC,MAAMC,OAAxC;AACD,WAFD;AAGD;AACF,OAjBD,EAiBGC,KAjBH,CAiBS,eAAO;AACdH,cAAM,qCAAN,EAA6CI,GAA7C;AACD,OAnBD;AAoBD;;;gCAEWC,Q,EAAU;AAAA;;AACpBlB,YAAM,aAAN,EAAqB;AACnBmB,gBAAQ,MADW;AAEnBC,iBAAS,EAAE,gBAAgB,kBAAlB,EAFU;AAGnBC,cAAMC,KAAKC,SAAL,CAAeL,QAAf;AAHa,OAArB,EAIGjB,IAJH,CAIQ,oBAAY;AAClB,YAAIC,SAASC,EAAb,EAAiB;AACfD,mBAASE,IAAT,GAAgBH,IAAhB,CAAqB,wBAAgB;AACrCuB,yBAAa5C,OAAb,GAAuB,IAAIC,IAAJ,CAAS2C,aAAa5C,OAAtB,CAAvB;AACA,gBAAI4C,aAAahC,cAAjB,EACEgC,aAAahC,cAAb,GAA8B,IAAIX,IAAJ,CAAS2C,aAAahC,cAAtB,CAA9B;AACF;AACA,gBAAMiC,YAAY,OAAK3B,KAAL,CAAWH,MAAX,CAAkB+B,MAAlB,CAAyBF,YAAzB,CAAlB;AACA,mBAAKZ,QAAL,CAAc,EAAEjB,QAAQ8B,SAAV,EAAd;AACC,WAPD;AAQD,SATD,MASO;AACLvB,mBAASE,IAAT,GAAgBH,IAAhB,CAAqB,iBAAS;AAC5BY,kBAAM,0BAA0BC,MAAMC,OAAtC;AACD,WAFD;AAGD;AACF,OAnBD,EAmBGC,KAnBH,CAmBS,eAAO;AACZH,cAAM,sCAAsCI,IAAIF,OAAhD;AACH,OArBD;AAsBD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AACE;AAAA;AAAA;AAAA;AAAA,SADF;AAEE,kEAFF;AAGE,iDAHF;AAIE,sCAAC,UAAD,IAAY,QAAQ,KAAKjB,KAAL,CAAWH,MAA/B,GAJF;AAKE,iDALF;AAME,4DAAU,aAAa,KAAKpB,WAA5B;AANF,OADF;AAUD;;;;EAvEoC,gBAAMO,S;;kBAAxBe,S","file":"app.bundle.js","sourcesContent":["import React from 'react';\n\nexport default class IssueAdd extends React.Component {\n  constructor() {\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  handleSubmit(e) {\n    e.preventDefault(); // prevents default form behavior of doing a GET and refresh page.\n    var form = document.forms.issueAdd; //issueAdd is the form name\n    this.props.createIssue({ // call the parent method 'createIssue' via callback\n      owner: form.owner.value,\n      title: form.title.value,\n      status: 'New',\n      created: new Date(),\n    });\n    // clear the form for next input\n    form.owner.value = '';\n    form.title.value = '';\n  }\n  \n  render() {\n    return (\n      // onSubmit allows user to hit 'Enter'\n      <form name='issueAdd' onSubmit={this.handleSubmit}>\n        <input type='text' name='owner' placeholder='Owner'/>\n        <input type='text' name='title' placeholder='Title'/>\n        <button>Add</button>\n      </form>\n    )\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/IssueAdd.jsx","import React from 'react';\n\nexport default class IssueFilter extends React.Component {\n  render() {\n    return (\n      <div>Placeholder for IssueFilter</div>\n    )\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/IssueFilter.jsx","import IssueList from './IssueList.jsx';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst contentNode = document.getElementById('contents');\n\nReactDOM.render(<IssueList />, contentNode);      // Render the component inside the content Node \n\n\n// WEBPACK FOOTER //\n// ./src/App.jsx","import React from 'react';\nimport 'whatwg-fetch';\nimport IssueAdd from './IssueAdd.jsx';\nimport IssueFilter from './IssueFilter.jsx';\n\n// stateless function. => (return value)\nconst IssueRow = (props) => (\n  <tr>\n    <td>{props.issue._id}</td> \n    <td>{props.issue.status}</td> \n    <td>{props.issue.owner}</td>\n    <td>{props.issue.created.toDateString()}</td> \n    <td>{props.issue.effort}</td> \n    <td>{props.issue.completionDate ? props.issue.completionDate.toDateString() : ''}</td> \n    <td>{props.issue.title}</td>\n  </tr>\n)\n\n// use of {} indicates a return() inside.\nfunction IssueTable(props) {\n  const issueRows = props.issues.map(issue => <IssueRow key={issue._id} issue={issue} />);\n  return (\n    <table className=\"bordered-table\">\n      <thead>\n        <tr>\n          <th>Id</th> \n          <th>Status</th> \n          <th>Owner</th> \n          <th>Created</th> \n          <th>Effort</th>\n          <th>Completion Date</th> \n          <th>Title</th>\n        </tr>\n      </thead>\n      <tbody>{issueRows}</tbody>\n    </table>\n  );  \n}\n\nexport default class IssueList extends React.Component {\n  constructor() {\n    super();\n    this.state = { issues: [] }; \n    this.createIssue = this.createIssue.bind(this);\n  }\n  \n  // Lifecycle method hook - load data after component is mounted\n  componentDidMount() {\n    this.loadData();\n  }\n  \n  loadData() {\n    fetch('/api/issues').then(response =>  {\n      if (response.ok) {\n        response.json().then(data => {\n          console.log('Total count of records: ', data._metadata.total_count);\n          // forloop to convert string to dates\n          data.records.forEach(issue => {\n            issue.created = new Date(issue.created);\n            if (issue.completionDate)\n              issue.completionDate = new Date(issue.completionDate);\n          });\n          this.setState({ issues: data.records });\n        });\n      } else {\n        response.json().then(error => {\n          alert('Failed to fetch issues:' + error.message)\n        });\n      }\n    }).catch(err => {\n      alert(\"Error in fetching data from server:\", err);\n    });\n  }\n  \n  createIssue(newIssue) {\n    fetch('/api/issues', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(newIssue),\n    }).then(response => {\n      if (response.ok) {\n        response.json().then(updatedIssue => {\n        updatedIssue.created = new Date(updatedIssue.created);\n        if (updatedIssue.completionDate)\n          updatedIssue.completionDate = new Date(updatedIssue.completionDate);\n        // create a copy because state is immutable\n        const newIssues = this.state.issues.concat(updatedIssue);\n        this.setState({ issues: newIssues });\n        });\n      } else {\n        response.json().then(error => {\n          alert(\"Failed to add issue: \" + error.message)\n        });\n      }\n    }).catch(err => {\n        alert(\"Error in sending data to server: \" + err.message);\n    });\n  }\n   \n  render() {\n    return (\n      <div>\n        <h1>Issue Tracker</h1>\n        <IssueFilter />\n        <hr />\n        <IssueTable issues={this.state.issues}/>\n        <hr />\n        <IssueAdd createIssue={this.createIssue} />\n      </div>\n    );\n  }\n}\n  \n\n\n// WEBPACK FOOTER //\n// ./src/IssueList.jsx"],"sourceRoot":""}